<!--===================================================================================================================
Released under the MIT License.
    
Copyright (c) 2018 Ntreev Soft co., Ltd.

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated 
documentation files (the "Software"), to deal in the Software without restriction, including without limitation the 
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit 
persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the 
Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR 
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR 
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
====================================================================================================================-->
<TreeView x:Class="Ntreev.Library.PsdViewer.Controls.TreeListView"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
          xmlns:local="clr-namespace:Ntreev.Library.PsdViewer"
          xmlns:ctrl="clr-namespace:Ntreev.Library.PsdViewer.Controls"
          xmlns:conv="clr-namespace:Ntreev.Library.PsdViewer.Converters"
          xmlns:nmfc="clr-namespace:Ntreev.ModernUI.Framework.Controls;assembly=Ntreev.ModernUI.Framework"
          xmlns:vm="clr-namespace:Ntreev.Library.PsdViewer.ViewModels"
          xml:lang="ko"
          mc:Ignorable="d" 
          d:DesignHeight="300" d:DesignWidth="500">
    <TreeView.Resources>
        <conv:LevelToIndentConverter x:Key="LevelToIndentConverter"/>
        <!--<conv:TreeViewItemToImageConverter x:Key="treeViewItemToImageConverter" />
        <conv:SyncStateToBrushConverter x:Key="syncStateToBrushConverter" />
        <conv:SyncStateToIconConverter x:Key="syncStateToIconConverter" />-->

        <ctrl:CellTemplateSelector x:Key="cellTemplateSelector" />

        <Style x:Key="HasPattern_HighlightTextBlock_Style" TargetType="{x:Type nmfc:HighlightTextBlock}" BasedOn="{StaticResource {x:Type nmfc:HighlightTextBlock}}">
            <Setter Property="Text" Value="{Binding DisplayName}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding HasPattern}" Value="True">
                    <Setter Property="Pattern" Value="{Binding Pattern}" />
                    <Setter Property="CaseSensitive" Value="{Binding CaseSensitive}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
            <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackground}" />
            <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForeground}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}" />
            <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
            <Setter Property="Padding" Value="4 5" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="BorderBrush" Value="{DynamicResource InputBorder}" />
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15" Height="13" Background="Transparent">
                            <Path x:Name="ExpandPath" 
                                  HorizontalAlignment="Left" 
                                  VerticalAlignment="Center"
                                  Stroke="{DynamicResource WindowText}"
                                  StrokeThickness="1"
                                  SnapsToDevicePixels="True"
                                  Fill="{TemplateBinding Foreground}"
                                  Data="M 3 0 L 7 4 L 3 8 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 8 1 L 8 6 L 3 6 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="{x:Type vm:PropertiesItemViewModel}">
            <DockPanel Height="20">
                <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" 
                              Margin="{Binding Level, Converter={StaticResource LevelToIndentConverter}, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}" ClickMode="Press"/>
                <Border Width="4" />
                <nmfc:HighlightTextBlock Style="{StaticResource HasPattern_HighlightTextBlock_Style}" />
            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=HasItems, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}" Value="False">
                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="{x:Type vm:PSDItemViewModel}">
            <DockPanel Height="20">
                <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" 
                              Margin="{Binding Level, Converter={StaticResource LevelToIndentConverter}, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}" ClickMode="Press"/>
                <nmfc:IconImage Source="/Ntreev.Library.PsdViewer;component/Images/ps.png" />
                <Border Width="4" />
                <nmfc:HighlightTextBlock Style="{StaticResource HasPattern_HighlightTextBlock_Style}" />
            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=HasItems, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}" Value="False">
                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter TargetName="Expander" Property="Foreground" Value="{DynamicResource WindowBackground}" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="{x:Type vm:LinkedLayerItemViewModel}">
            <DockPanel Height="20">
                <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" 
                              Margin="{Binding Level, Converter={StaticResource LevelToIndentConverter}, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}" ClickMode="Press"/>
                <nmfc:IconImage Source="/Ntreev.Library.PsdViewer;component/Images/linked_layer.png" />
                <Border Width="4" />
                <nmfc:HighlightTextBlock Style="{StaticResource HasPattern_HighlightTextBlock_Style}" />
            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=HasItems, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}" Value="False">
                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter TargetName="Expander" Property="Foreground" Value="{DynamicResource WindowBackground}" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="{x:Type vm:LayerItemViewModel}">
            <DockPanel Height="20" PreviewMouseLeftButtonDown="DockPanel_PreviewMouseLeftButtonDown">
                <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" 
                              Margin="{Binding Level, Converter={StaticResource LevelToIndentConverter}, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}" ClickMode="Press"/>
                <nmfc:IconImage Source="/Ntreev.Library.PsdViewer;component/Images/image_layer.png" />
                <Border Width="4" />
                <nmfc:HighlightTextBlock Style="{StaticResource HasPattern_HighlightTextBlock_Style}" />
            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=HasItems, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}" Value="False">
                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter TargetName="Expander" Property="Foreground" Value="{DynamicResource WindowBackground}" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <GridViewColumnCollection x:Key="gvcc">
            <GridViewColumn Header="Name" CellTemplateSelector="{StaticResource cellTemplateSelector}" Width="325" />
            <GridViewColumn Header="Type" Width="100" >
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Type, TargetNullValue=''}" HorizontalAlignment="Right" />
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn Header="Value" Width="150" >
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Value, TargetNullValue=''}" HorizontalAlignment="Right" />
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>
        </GridViewColumnCollection>

        <Style TargetType="{x:Type ctrl:TreeListViewItem}">
            <Setter Property="ItemsSource" Value="{Binding Items}"/>
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="Foreground" Value="{DynamicResource ItemText}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Header" Value="{Binding DisplayName}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ctrl:TreeListViewItem}">
                        <StackPanel>
                            <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <GridViewRowPresenter x:Name="PART_Header" Content="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" Columns="{StaticResource gvcc}" />
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="False">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="False"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="False"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ItemBackgroundSelected}" />
                                <Setter Property="Foreground" Value="{DynamicResource WindowBackground}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsSelectionActive" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ItemBackgroundHover}" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsVisible}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ctrl:TreeListView}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ctrl:TreeListView}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <DockPanel>
                                <GridViewHeaderRowPresenter Columns="{StaticResource gvcc}" DockPanel.Dock="Top" />
                                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </TreeView.Resources>
</TreeView>
