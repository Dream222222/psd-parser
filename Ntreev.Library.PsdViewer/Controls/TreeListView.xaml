<TreeView x:Class="Ntreev.Library.PsdViewer.Controls.TreeListView"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
          xmlns:local="clr-namespace:Ntreev.Library.PsdViewer"
          xmlns:ctrl="clr-namespace:Ntreev.Library.PsdViewer.Controls"
          xmlns:conv="clr-namespace:Ntreev.Library.PsdViewer.Converters"
          xmlns:nmfc="clr-namespace:Ntreev.ModernUI.Framework.Controls;assembly=Ntreev.ModernUI.Framework"
          xmlns:vm="clr-namespace:Ntreev.Library.PsdViewer.ViewModels"
          xml:lang="ko"
          mc:Ignorable="d" 
          d:DesignHeight="300" d:DesignWidth="500">
    <TreeView.Resources>
        <conv:LevelToIndentConverter x:Key="LevelToIndentConverter"/>
        <!--<conv:TreeViewItemToImageConverter x:Key="treeViewItemToImageConverter" />
        <conv:SyncStateToBrushConverter x:Key="syncStateToBrushConverter" />
        <conv:SyncStateToIconConverter x:Key="syncStateToIconConverter" />-->

        <ctrl:CellTemplateSelector x:Key="cellTemplateSelector" />

        <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
            <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackground}" />
            <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForeground}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}" />
            <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
            <Setter Property="Padding" Value="4 5" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="BorderBrush" Value="{DynamicResource InputBorder}" />
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15" Height="13" Background="Transparent">
                            <Path x:Name="ExpandPath" 
                                  HorizontalAlignment="Left" 
                                  VerticalAlignment="Center"
                                  Stroke="{DynamicResource WindowText}"
                                  StrokeThickness="1"
                                  SnapsToDevicePixels="True"
                                  Fill="{TemplateBinding Foreground}"
                                  Data="M 3 0 L 7 4 L 3 8 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 8 1 L 8 6 L 3 6 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="{x:Type vm:PropertiesItemViewModel}">
            <DockPanel Height="20">
                <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" 
                              Margin="{Binding Level, Converter={StaticResource LevelToIndentConverter}, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}" ClickMode="Press"/>
                <Border Width="4" />
                <TextBlock Text="{Binding DisplayName}" />
            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=HasItems, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}" Value="False">
                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="{x:Type vm:PSDItemViewModel}">
            <DockPanel Height="20">
                <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" 
                              Margin="{Binding Level, Converter={StaticResource LevelToIndentConverter}, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}" ClickMode="Press"/>
                <nmfc:IconImage Source="/Ntreev.Library.PsdViewer;component/Images/ps.png" />
                <Border Width="4" />
                <TextBlock Text="{Binding DisplayName}" />
            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=HasItems, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}" Value="False">
                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="{x:Type vm:LinkedLayerItemViewModel}">
            <DockPanel Height="20">
                <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" 
                              Margin="{Binding Level, Converter={StaticResource LevelToIndentConverter}, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}" ClickMode="Press"/>
                <nmfc:IconImage Source="/Ntreev.Library.PsdViewer;component/Images/linked_layer.png" />
                <Border Width="4" />
                <TextBlock Text="{Binding DisplayName}" />
            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=HasItems, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}" Value="False">
                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="{x:Type vm:LayerItemViewModel}">
            <DockPanel Height="20" PreviewMouseLeftButtonDown="DockPanel_PreviewMouseLeftButtonDown">
                <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" 
                              Margin="{Binding Level, Converter={StaticResource LevelToIndentConverter}, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}" ClickMode="Press"/>
                <!--<Border Width="9" Height="16">
                    <Image x:Name="syncState" Source="{Binding SyncState, Converter={StaticResource syncStateToIconConverter}}" Stretch="None" HorizontalAlignment="Center"/>
                </Border>
                <Image x:Name="Icon" Width="16" Height="16" Source="{Binding Converter={StaticResource treeViewItemToImageConverter}}" Margin="0,0,2,0"/>-->
                <nmfc:IconImage Source="/Ntreev.Library.PsdViewer;component/Images/image_layer.png" />
                <Border Width="4" />
                <TextBlock Text="{Binding DisplayName}" />
            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=HasItems, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TreeListViewItem}}}" Value="False">
                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <GridViewColumnCollection x:Key="gvcc">
            <GridViewColumn Header="Name" CellTemplateSelector="{StaticResource cellTemplateSelector}" Width="325" />
            <GridViewColumn Header="Type" Width="100" >
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Type, TargetNullValue=''}" HorizontalAlignment="Right" />
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn Header="Value" Width="150" >
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Value, TargetNullValue=''}" HorizontalAlignment="Right" />
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>
        </GridViewColumnCollection>

        <Style TargetType="{x:Type ctrl:TreeListViewItem}">
            <Setter Property="ItemsSource" Value="{Binding Items}"/>
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            <Setter Property="Header" Value="{Binding DisplayName}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ctrl:TreeListViewItem}">
                        <StackPanel>
                            <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <GridViewRowPresenter x:Name="PART_Header" Content="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" Columns="{StaticResource gvcc}" />
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ctrl:TreeListView}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ctrl:TreeListView}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <DockPanel>
                                <GridViewHeaderRowPresenter Columns="{StaticResource gvcc}" DockPanel.Dock="Top" />
                                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </TreeView.Resources>
</TreeView>
